@use "sass:math";

$borders-width: (
  "0": 0,
  "1": 0.0625rem,
  "2": 0.125rem,
  "3": 0.1875rem,
  "4": 0.25rem,
  "5": 0.3125rem,
  "6": 0.375rem,
  "7": 0.4375rem,
  "8": 0.5rem,
  "9": 0.5625rem,
  "10": 0.625rem,
  "11": 0.6875rem,
  "12": 0.75rem,
  "13": 0.8125rem,
  "14": 0.875rem,
  "15": 15px,
  "16": 1rem,
  "17": 1.0625rem,
  "18": 1.125rem,
  "19": 1.1875rem,
  "20": 1.25rem,
);

$borders-type: dotted, dashed, solid, double, groove, ridge, inset, outset, none,
  hidden;

$border-direction: border, border-top, border-bottom, border-right, border-left;

@each $typeProperty in $borders-type {
  @each $widthProperty, $widthValue in $borders-width {
    @each $directionProperty in $border-direction {
      @each $key, $value in $colors {
        @if ($directionProperty == border-top) {
          /* bt-solid-1-red */
          .bt-#{$widthProperty}-#{$typeProperty}-#{$key} {
            #{$directionProperty}: $widthValue $typeProperty $value;
          }
        } @else if ($directionProperty == border-bottom) {
          .bm-#{$widthProperty}-#{$typeProperty}-#{$key} {
            #{$directionProperty}: $widthValue $typeProperty $value;
          }
        } @else if ($directionProperty == border-right) {
          .br-#{$widthProperty}-#{$typeProperty}-#{$key} {
            #{$directionProperty}: $widthValue $typeProperty $value;
          }
        } @else if ($directionProperty == border-left) {
          .bl-#{$widthProperty}-#{$typeProperty}-#{$key} {
            #{$directionProperty}: $widthValue $typeProperty $value;
          }
        } @else {
          .b-#{$widthProperty}-#{$typeProperty}-#{$key} {
            #{$directionProperty}: $widthValue $typeProperty $value;
          }
        }
      }
    }
  }
}
