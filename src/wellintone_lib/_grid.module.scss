@use "sass:math";

$grid-columns: 12;
$grid-gaps: (
  "0": 0,
  "1": 10px,
  "2": 20px,
  "3": 30px,
  "4": 40px,
  "5": 50px,
);

$layout-values: start, end, center, space-between, space-around;
$align-values: stretch, center, start, end, justify;

// base layout classes

.fluidcontainer {
  width: 100%;
}
.container {
  min-width: 100%;
  margin: 0 auto;
  box-sizing: border-box;
  position: relative;
  transition: 1s ease-in-out;
  gap: $gap-lg;
  z-index: 3;
  min-height: 100%;

  @include xs {
    padding: $base-padding * 2;
  }
  @include sm {
    padding: $base-padding * 3;
  }
  @include md {
    padding: $base-padding * 3;
  }
  @include lg {
    padding: $base-padding * 4;
  }
  @include xl {
    padding: $base-padding * 6;
  }
  @include xxl {
    padding: $base-padding * 8;
  }
}

.section {
  min-height: 100vh;
  width: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  @include xs {
    padding: $base-padding * 2;
  }
  @include sm {
    padding: $base-padding * 3;
  }
  @include md {
    padding: $base-padding * 3;
  }
  @include lg {
    padding: $base-padding * 4;
  }
  @include xl {
    padding: $base-padding * 6;
  }
  @include xxl {
    padding: $base-padding * 8;
  }
}

.row {
  display: flex;
  flex-flow: row wrap;
}
.row-reverse {
  display: flex;
  flex-flow: row-reverse wrap;
}

.column {
  display: flex;
  flex-flow: column wrap;
}
.column-reverse {
  display: flex;
  flex-flow: column-reverse wrap;
}

//grid gaps
@each $key, $val in $grid-gaps {
  .gap-#{$key} > * {
    padding: $val;
    /* margin: $val; */
  }
  .gap-#{$key} {
    /* gap: $val; */
    margin-left: -$val;
    margin-right: -$val;
  }
}

// justify content classes
@each $val in $align-values {
  .text-#{$val} {
    text-align: $val;
  }
}

// justify content classes
@each $val in $layout-values {
  .justify-#{$val} {
    display: flex;
    justify-content: $val !important;
  }
}

// align items classes
@each $val in $align-values {
  .align-#{$val} {
    display: flex;
    align-items: $val;
  }
}

// col classes
@include xs {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xs {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include sm {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include md {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include lg {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include xl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
