@mixin Navbar($bg: $primary, $color: null) {
  display: flex;
  align-items: center;
  justify-content: space-between;

  @include xs {
    padding: $base-padding * 2;
  }
  @include sm {
    padding: $base-padding * 3;
  }
  @include md {
    padding: $base-padding * 3;
  }
  @include lg {
    padding: $base-padding * 4;
  }
  @include xl {
    padding: $base-padding * 6;
  }
  @include xxl {
    padding: $base-padding * 8;
  }

  /* background-color: $bg; */

  /* TODO: DA DEFINIRE */
  height: 120px;
  @if ($color) {
    color: $on-background;
  } @else {
    color: contrastText($bg);
  }
  min-width: 100%;
  z-index: 99;
}

.Navbar {
  @include Navbar();
  .responsive_nav {
    transform: translateY(100vh);
    /* background-color: $background; */
  }
}

.Navbar {
  @include xl {
    top: 0;
    padding: $base-padding $base-padding * 8;
    .nav-btn {
      display: none;
    }
  }
}

@each $key, $value in $colors {
  @for $i from 0 through 10 {
    .Navbar-#{$key}-transparent-#{$i} {
      background-color: rgba($value, $i / 10);
    }
  }
}

@each $key, $val in $colors {
  .Navbar-#{$key} {
    @include Navbar($val);
  }
}

/* 

@function contrastText($color) {
    $result: invert($color);
    $lightness: lightness($result);
    @if ($lightness < 50) {
        $result: black;
    }
    @return $result;
}

@mixin buttonStyles($color) {
    font-size: $font-std;
    padding: 1rem 3rem;
    background-color: $color;
    color: contrastText($color);
    transition: $transition-std;

    &:hover {
        cursor: pointer;
        background-color: lighten($color, 15%);
    }
    &:focus {
        background-color: lighten($color, 10%);
    }
    &:active {
        background-color: lighten($color, 25%);
    }
}
.btnPrimary {
    @include buttonStyles($primary);
}
.btnSecondary {
    @include buttonStyles($secondary);
   
}
.btnTest {
    @include buttonStyles(#888);
}

*/
